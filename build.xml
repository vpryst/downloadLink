<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" default="build_jar" name="downloalink">

	<property file="build.properties" />

	<taskdef resource="checkstyletask.properties" classpath="lib/checkstyle-5.6.jar" />


	<target name="resolve" description="Resolve and Retrieve with ivy">
		<ivy:resolve />
		<ivy:cachepath pathid="default.classpath" />
		<ivy:retrieve sync="true" type="jar" />
	</target>

	<target name="compile" depends="resolve" description="Compile">
		<mkdir dir="${build.classes}" />
		<javac srcdir="${src.main}/java" destdir="${build.classes}">
			<classpath refid="default.classpath" />
		</javac>
		<copy todir="${build.classes}" overwrite="false">
			<fileset dir="${src.main}/java">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${src.main}/resources">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>

	<target name="build_jar" depends="compile" description="pack project to jar">
		<jar destfile="${runnable.dir}/${runnable.file.name}.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="${manifest.main.class}" />
				<attribute name="Class-Path" value="${manifest.class.path}" />
			</manifest>
			<fileset dir="${build.classes}" />
		</jar>
		<copy todir="${runnable.dir}/lib" overwrite="false">
			<fileset dir="lib">
				<include name="**/*" />
			</fileset>
		</copy>
		<echo file="${runnable.dir}/${runnable.file.name}.bat" message="java -jar ${runnable.file.name}.jar" />
	</target>

	<target name="clean">
		<delete dir="${lib.dir}" />
		<delete dir="${build.classes}" />
		<delete dir="${runnable.dir}" />
	</target>

	<target name="checkstyle" description="Checks that we are using consistant well formed style.">
		<checkstyle config="sun_checks.xml" failOnViolation="false">
			<fileset dir="src/main/" includes="**/*.java" />
			<formatter type="xml" toFile="build/checkstyle-result.xml" />
		</checkstyle>
	</target>

	<target name="doc" description="Generate documentation">
		<javadoc destdir="${javadoc}">
			<sourcepath location="${src.main.java}" />
			<classpath location="${build.classes}" />
		</javadoc>
	</target>



	<!--taskdef classpath="lib/cobertura-1.9.4.jar" resource="tasks.properties" />
	<target name="test"-->
	<!--depends="compile"-->
	<!--
	  Generate a series of HTML files containing the coverage
	  data in a user-readable form using nested source filesets.
	  -->
	<!--cobertura-report destdir="${test.dir}/coverage">
			<fileset dir="${build.classes}/org.vpryst.downloadLink">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report-->
	<!--mkdir dir="${build.instrumented}" />
		<cobertura-instrument todir="${build.instrumented}">
			
			<fileset dir="${build.classes}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="/*.jar" />
			</fileset>
		</cobertura-instrument>
	</target-->

	<!--property name="cobertura.dir" value="c:/cobertura-1.9.4.1" />

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
	<target name="test">
		<cobertura-instrument todir="instrumented">
			<ignore regex="org.apache.log4j.*" />
			<fileset dir="${build.classes}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
			
			<fileset dir="${lib.dir}">
				<include name="my-simple-plugin.jar" />
			</fileset>
		</cobertura-instrument>
	</target-->

	<property name="cobertura.dir" value="${lib.dir}" />

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura-1.9.4.jar" />
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
	<target name="test">
		<cobertura-instrument todir="instrumented">
			
			<fileset dir="${build.classes}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
	</target>
	<target name="test1">
		<cobertura-report format="html" destdir="coveragereport" >
		    <fileset dir="${src.main}">
		        <include name="**/*.java" />
		        <exclude name="**/*Stub.java" />
		    </fileset>		    
		</cobertura-report>
	</target>

</project>